[tool.poetry]
name = "mikubot-v2"
version = "0.1.0"
description = ""
authors = ["sushi-chaaaan <mail@sushichan.live>"]
readme = "README.md"
packages = [{ include = "mikubot_v2" }]

[tool.poetry.dependencies]
python = "^3.12"
discord-py = { git = "https://github.com/Rapptz/discord.py.git", rev = "master", extras = [
    "voice",
    "speed",
] }
pydantic = "^2.0"
aiohttp = "^3.9.1"
# ductile-ui = { git = "https://github.com/sushi-chaaaan/ductile-ui.git", rev = "main" }
ductile-ui = "^0.2.6"
typing-extensions = "^4.8.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.4.1"
poethepoet = "^0.20.0"
python-dotenv = "^0.21.1"
pre-commit = "^3.1.0"
ruff = "^0.1.7"
poetry-plugin-export = "^1.6.0"

[tool.ruff]
# https://qiita.com/yuji38kwmt/items/63e82126076204923520
target-version = "py312"
line-length = 125
ignore = [
    "E203",
    "D",
    "RUF001",  # 全角記号など`ambiguous unicode character`も使いたいため
    "RUF002",  # 全角記号など`ambiguous unicode character`も使いたいため
    "RUF003",  # 全角記号など`ambiguous unicode character`も使いたいため
    "PLC1901", # compare-to-empty-string : `if a == "`のように空文字列で直接比較したいときがあるため
    "ANN101",  # missing-type-self: 引数selfには型ヒントは付けていないため
    "ANN102",  # missing-type-cls: 引数clsには型ヒントは付けていないため
    "ERA",     # : 役立つこともあるが、コメントアウトしていないコードも警告されるので無視する
    "COM812",  # recommended by ruff formatter
    "ISC001",  # recommended by ruff formatter
]
select = ["ALL"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.per-file-ignores]
"./src/app/**" = [
    "INP001", # add __init__.py to app directory is too much work
]
"/**/tests/**" = [
    "INP001", # add __init__.py to tests directory is too much work
    "S101",   # allow to use assert in tests
]


[tool.mypy]
python_version = "3.12"
exclude = [".venv"]
follow_imports = "normal"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
implicit_reexport = true

[tool.poe.tasks]
install = "poetry run pre-commit install"
lint = "poetry run ruff check ./src"
format = "poetry run ruff format ./src"
export = "poetry export -f requirements.txt -o requirements.txt --only main --without-hashes"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
